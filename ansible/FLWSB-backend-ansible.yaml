---
- name: Hetzner server for FLWSB backend
  hosts: FLWSB-hetzner
  user: '{{ user }}'
  vars:
    domains:
      - grafana.iot-ap.be
      - nodered.iot-ap.be
  tasks:

# RUN THIS PLAYBOOK: ansible-playbook FLWSB-backend-ansible.yaml -K
# -K -> ask become password (root)
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      become: true

    - name: Install packages
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - pip
          - certbot
          - python3-certbot-nginx
        state: present
        become: true

    - name: Add Docker's GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      become: true

    - name: Add Docker repo
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/debian bullseye stable
        # get architecture: dpkg --print-architecture
        # get lsb release: lsb_release -cs
        state: present
      become: true

    - name: Update apt cache
      ansible.builtin.apt:
         update_cache: true
      become: true

    - name: Install Docker Engine
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      become: true
      
    - name: Verify install
      community.docker.docker_container:
        name: HelloWorld
        image: hello-world
      become: true

    - name: Install docker & docker-compose via pip
      ansible.builtin.pip:
        name:
          - docker
          - docker-compose

    - name: Clone git repo
      ansible.builtin.git:
        repo: "https://github.com/jappie3/flexible-lorawan-architecture"
        dest: ~/flexible-lorawan-architecture/

    - name: Copy .env file from local machine to remote server
      ansible.builtin.copy:
        src: .env
        # copy inside cloned git repo
        dest: ~/flexible-lorawan-architecture/src/.env

    - name: Generate SSL certificates
      command: certbot certonly --agree-tos --email "{{ email }}" --standalone -d {{ item }}
      args:
        creates: "/etc/letsencrypt/live/{{ item }}"
      with_items: "{{ domains }}"

    - name: Renew certificates
      cron:
        name: "Renew SSL certs"
        job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"
        minute: "0"
        hour: "0"

    - name: Bring docker compose up
      community.docker.docker_compose:
        project_src: flexible-lorawan-architecture/src/
        files:
        - docker-compose.yaml
